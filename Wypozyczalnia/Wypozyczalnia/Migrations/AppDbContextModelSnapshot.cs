// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Wypozyczalnia.Models;

#nullable disable

namespace Wypozyczalnia.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Wypozyczalnia.Models.Klient", b =>
                {
                    b.Property<int>("Id_klient")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_klient"));

                    b.Property<DateTime>("Data_rejestracja")
                        .HasColumnType("datetime2");

                    b.Property<string>("Imie")
                        .IsRequired()
                        .HasMaxLength(24)
                        .HasColumnType("nvarchar(24)");

                    b.Property<string>("Nazwisko")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Telefon")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id_klient");

                    b.ToTable("Klienci");
                });

            modelBuilder.Entity("Wypozyczalnia.Models.Sprzet", b =>
                {
                    b.Property<int>("Id_sprzetu")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_sprzetu"));

                    b.Property<decimal>("Cena_za_tydz")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Kategoria")
                        .HasColumnType("int");

                    b.Property<int>("Producent")
                        .HasColumnType("int");

                    b.Property<string>("Rozmiar")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id_sprzetu");

                    b.ToTable("Sprzety");
                });

            modelBuilder.Entity("Wypozyczalnia.Models.Wypozyczenie", b =>
                {
                    b.Property<int>("Id_wypozyczenia")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_wypozyczenia"));

                    b.Property<decimal>("Cena_calkowita")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("Data_wypozyczenia")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Data_zwrotu")
                        .HasColumnType("datetime2");

                    b.Property<int>("Id_klient")
                        .HasColumnType("int");

                    b.Property<int>("Id_sprzetu")
                        .HasColumnType("int");

                    b.Property<int>("KlientId_klient")
                        .HasColumnType("int");

                    b.Property<int>("SprzetId_sprzetu")
                        .HasColumnType("int");

                    b.HasKey("Id_wypozyczenia");

                    b.HasIndex("KlientId_klient");

                    b.HasIndex("SprzetId_sprzetu");

                    b.ToTable("Wypozyczenia");
                });

            modelBuilder.Entity("Wypozyczalnia.Models.Wypozyczenie", b =>
                {
                    b.HasOne("Wypozyczalnia.Models.Klient", "Klient")
                        .WithMany("Wypozyczenia")
                        .HasForeignKey("KlientId_klient")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Wypozyczalnia.Models.Sprzet", "Sprzet")
                        .WithMany("Wypozyczenia")
                        .HasForeignKey("SprzetId_sprzetu")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Klient");

                    b.Navigation("Sprzet");
                });

            modelBuilder.Entity("Wypozyczalnia.Models.Klient", b =>
                {
                    b.Navigation("Wypozyczenia");
                });

            modelBuilder.Entity("Wypozyczalnia.Models.Sprzet", b =>
                {
                    b.Navigation("Wypozyczenia");
                });
#pragma warning restore 612, 618
        }
    }
}
